
RecordEdits

Define ExpressionEntity { ExpressionEntity1  ExpressionEntity2  ExpressionEntity3  ExpressionEntity4 }
Define DiscreteDistribution { QuantityDist1  QuantityDist2  TypeDist1  TypeDist2 }
Define Assign { Assign1  Assign2  Assign3  Assign4  Assign5 }
Define Branch { Branch1 }
Define EntityDelay { EntityDelay1  EntityDelay2  EntityDelay3  EntityDelay4  EntityDelay5  EntityDelay6 }
Define EntityGenerator { EntityGenerator1  EntityGenerator2 }
Define EntitySink { EntitySink1  EntitySink2 }
Define Queue { Queue1  Queue2 }
Define Release { Release1 }
Define Seize { Seize1 }
Define Server { Server1 }
Define SimEntity { SimEntity1  SimEntity2 }
Define ResourceUnit { ResourceUnit1 }
Define ColladaModel { Axis  Grid100x100 }
Define DisplayEntity { XY-Grid  XYZ-Axis }
Define OverlayClock { Clock }
Define OverlayText { Title }
Define Text { Text1  Text2  Text3  Text4  Text5  Text6  Text7  Text8  Text8_Copy1 }
Define View { View1 }

Queue2 CustomOutputList { { firstOrder  0 } }

ExpressionEntity1 UnitType { DimensionlessUnit }
ExpressionEntity2 UnitType { DimensionlessUnit }
ExpressionEntity3 UnitType { DimensionlessUnit }
ExpressionEntity4 UnitType { DimensionlessUnit }
QuantityDist1 UnitType { DimensionlessUnit }
QuantityDist2 UnitType { DimensionlessUnit }
TypeDist1 UnitType { DimensionlessUnit }
TypeDist2 UnitType { DimensionlessUnit }

Assign3 AttributeDefinitionList { { type  '""' } { ent  null } { amount  0 } }
Assign4 AttributeDefinitionList { { total  '{"A"=0, "B"=0}' } }
Assign5 AttributeDefinitionList { { total  '{"A"=0, "B"=0}' } }
SimEntity1 AttributeDefinitionList { { type  '"A"' } { quantity  0 } { capacity  0 } }
SimEntity2 AttributeDefinitionList { { type  '"A"' } { quantity  0 } { remaining  0 } { required  0 } }

Queue2 CustomOutputList { { firstOrder  '#Array containing the first order for each type#
map(|x|([Queue2].MatchValueMap(x)(1)), [Queue2].UniqueMatchValues)' } }

Simulation Description { 'Simulation run control inputs' }

# *** ExpressionEntity ***

ExpressionEntity1 Expression { '[Queue1].MatchValueCountMap("A") == 0 ? 0
: reduce(|x,accum|(accum + x.quantity), 0, [Queue1].MatchValueMap("A"))' }

ExpressionEntity2 Expression { '[Queue1].MatchValueCountMap("B") == 0 ? 0
: reduce(|x,accum|(accum + x.quantity), 0, [Queue1].MatchValueMap("B"))' }

ExpressionEntity3 Expression { '[Queue2].MatchValueCountMap("A") == 0 ? 0
: reduce(|x,accum|(accum + x.required), 0, [Queue2].MatchValueMap("A"))' }

ExpressionEntity4 Expression { '[Queue2].MatchValueCountMap("B") == 0 ? 0
: reduce(|x,accum|(accum + x.required), 0, [Queue2].MatchValueMap("B"))' }

# *** DiscreteDistribution ***

QuantityDist1 RandomSeed { 1 }
QuantityDist1 ValueList { 5  10  15  20 }
QuantityDist1 ProbabilityList { 0.25  0.25  0.25  0.25 }

QuantityDist2 RandomSeed { 2 }
QuantityDist2 ValueList { 10  20  30  40 }
QuantityDist2 ProbabilityList { 0.25  0.25  0.25  0.25 }

TypeDist1 RandomSeed { 3 }
TypeDist1 ValueList { 1  2 }
TypeDist1 ProbabilityList { 0.5  0.5 }

TypeDist2 RandomSeed { 4 }
TypeDist2 ValueList { 1  2 }
TypeDist2 ProbabilityList { 0.5  0.5 }

# *** Assign ***

Assign1 NextComponent { EntityDelay1 }
Assign1 AttributeAssignmentList { { 'this.obj.type = choose([TypeDist1].Value, "A", "B")' } { 'this.obj.quantity = [QuantityDist1].Value' } { 'this.obj.capacity = this.obj.quantity' } }

Assign2 NextComponent { EntityDelay3 }
Assign2 AttributeAssignmentList { { 'this.obj.type = choose([TypeDist2].Value, "A", "B")' } { 'this.obj.required = [QuantityDist2].Value' } { 'this.obj.remaining = this.obj.required' } }

Assign3 NextComponent { EntityDelay6 }
Assign3 AttributeAssignmentList { { 'this.type = this.obj.type' } { 'this.ent = [Queue1].MatchValueMap(this.type)(1)' } { 'this.amount = min(this.ent.quantity, this.obj.remaining)' } { 'this.obj.quantity = this.obj.quantity + this.amount' } { 'this.obj.remaining = this.obj.remaining - this.amount' } { 'this.ent.quantity = this.ent.quantity - this.amount' } }

Assign4 NextComponent { EntityDelay2 }
Assign4 AttributeAssignmentList { { 'this.total(this.obj.type) = this.total(this.obj.type) + this.obj.capacity' } }

Assign5 NextComponent { EntityDelay5 }
Assign5 AttributeAssignmentList { { 'this.total(this.obj.type) = this.total(this.obj.type) + this.obj.quantity' } }

# *** Branch ***

Branch1 NextComponentList { Release1  EntityDelay4 }
Branch1 Choice { 'this.obj.remaining <= 0 ? 1 : 2' }

# *** EntityDelay ***

EntityDelay1 NextComponent { Queue1 }
EntityDelay1 Duration { 3  s }

EntityDelay2 NextComponent { EntitySink1 }
EntityDelay2 Duration { 3  s }

EntityDelay3 NextComponent { Queue2 }
EntityDelay3 Duration { 3  s }

EntityDelay4 NextComponent { Assign3 }
EntityDelay4 Duration { 0.1  s }

EntityDelay5 NextComponent { EntitySink2 }
EntityDelay5 Duration { 3  s }

EntityDelay6 NextComponent { Branch1 }
EntityDelay6 Duration { 0.5  s }

# *** EntityGenerator ***

EntityGenerator1 NextComponent { Assign1 }
EntityGenerator1 InterArrivalTime { 1  s }
EntityGenerator1 PrototypeEntity { SimEntity1 }
EntityGenerator1 BaseName { Ent }

EntityGenerator2 NextComponent { Assign2 }
EntityGenerator2 FirstArrivalTime { 4  s }
EntityGenerator2 InterArrivalTime { 2  s }
EntityGenerator2 PrototypeEntity { SimEntity2 }
EntityGenerator2 BaseName { Order }

# *** EntitySink ***



# *** Queue ***

Queue1 Match { this.obj.type }

Queue2 Match { this.obj.type }

# *** Release ***

Release1 NextComponent { Assign5 }
Release1 ResourceList { ResourceUnit1 }

# *** Seize ***

Seize1 NextComponent { Assign3 }
Seize1 WaitQueue { Queue2 }
Seize1 NextEntity { '#Find the first order for each type that can be filled from stock#
orders = filter(|order|(
[Queue1].MatchValueCountMap(order.type) > 0 
&& reduce(|x,accum|(accum + x.quantity), 0, [Queue1].MatchValueMap(order.type)) >= order.required),
[Queue2].firstOrder);

#Return the order for the first type that can be filled#
size(orders) == 0 ? null : orders(1)' }
Seize1 WatchList { Queue1 }
Seize1 ResourceList { ResourceUnit1 }

# *** Server ***

Server1 NextComponent { Assign4 }
Server1 WaitQueue { Queue1 }
Server1 Match { [Assign3].type }
Server1 SelectionCondition { 'this.obj.quantity == 0' }
Server1 NextEntity { [Assign3].ent }
Server1 WatchList { Assign3 }
Server1 ServiceTime { 0  s }

# *** SimEntity ***



# *** ResourceUnit ***


# *** GRAPHICS INPUTS ***

Simulation DisplayedUnits { deg }
Simulation RealTime { TRUE }
Simulation SnapToGrid { TRUE }
Simulation ShowLabels { TRUE }
Simulation ShowSubModels { TRUE }
Simulation ShowEntityFlow { TRUE }
Simulation ShowModelBuilder { TRUE }
Simulation ShowObjectSelector { TRUE }
Simulation ShowInputEditor { TRUE }
Simulation ShowOutputViewer { TRUE }
Simulation ShowPropertyViewer { FALSE }
Simulation ShowLogViewer { FALSE }
Simulation ShowEventViewer { FALSE }

ExpressionEntity1 Position { 6.5  2.5  0.0  m }

ExpressionEntity2 Position { 6.5  1.0  0.0  m }

ExpressionEntity3 Position { 6.5  -0.5  0.0  m }

ExpressionEntity4 Position { 6.5  -2.0  0.0  m }

QuantityDist1 Position { -4.5  -1.5  0.0  m }

QuantityDist2 Position { -4.5  -6.5  0.0  m }

TypeDist1 Position { -6.5  -1.5  0.0  m }

TypeDist2 Position { -6.5  -6.5  0.0  m }

Assign1 Position { -5.5  0.5  0.0  m }

Assign2 Position { -5.5  -4.5  0.0  m }

Assign3 Position { 0.5  -4.5  0.0  m }

Assign4 Position { 0.5  0.5  0.0  m }

Assign5 Position { 8.5  -4.5  0.0  m }

Branch1 Position { 4.5  -4.5  0.0  m }

EntityDelay1 Points { { -4.5  0.5  0.0  m } { -2.5  0.5  0.0  m } }

EntityDelay2 Points { { 1.5  0.5  0.0  m } { 3.5  0.5  0.0  m } }

EntityDelay3 Points { { -4.5  -4.5  0.0  m } { -2.5  -4.5  0.0  m } }

EntityDelay4 Points { { 3.5  -3.0  0.0  m } { 1.5  -3.0  0.0  m } }

EntityDelay5 Points { { 9.5  -4.5  0.0  m } { 11.5  -4.5  0.0  m } }

EntityDelay6 Points { { 1.5  -4.5  0.0  m } { 3.5  -4.5  0.0  m } }

EntityGenerator1 Position { -7.5  0.5  0.0  m }

EntityGenerator2 Position { -7.5  -4.5  0.0  m }

EntitySink1 Position { 4.5  0.5  0.0  m }

EntitySink2 Position { 12.5  -4.5  0.0  m }

Queue1 Position { -1.5  2.0  0.0  m }

Queue2 Position { -1.5  -3.0  0.0  m }

Release1 Position { 6.5  -4.5  0.0  m }

Seize1 Position { -1.5  -4.5  0.0  m }

Server1 Position { -1.5  0.5  0.0  m }

SimEntity1 Position { -9.5  0.5  0.0  m }
SimEntity1 Alignment { 0.0  0.0  -0.5 }

SimEntity2 Position { -9.5  -4.5  0.0  m }
SimEntity2 Alignment { 0.0  0.0  -0.5 }

ResourceUnit1 Position { -1.5  -5.7  0.0  m }

# *** ColladaModel ***

Axis ColladaFile { <res>/shapes/axis_text.dae }

Grid100x100 ColladaFile { <res>/shapes/grid100x100.dae }

# *** DisplayEntity ***

XY-Grid Description { 'Grid for the X-Y plane (100 m x 100 m)' }
XY-Grid Size { 100  100  m }
XY-Grid DisplayModel { Grid100x100 }
XY-Grid Show { FALSE }
XY-Grid Movable { FALSE }

XYZ-Axis Description { 'Unit vectors' }
XYZ-Axis Alignment { -0.4393409  -0.4410096  -0.4394292 }
XYZ-Axis Size { 1.125000  1.1568242  1.1266404  m }
XYZ-Axis DisplayModel { Axis }
XYZ-Axis Show { FALSE }
XYZ-Axis Movable { FALSE }

# *** OverlayClock ***

Clock Description { 'Simulation date and time' }
Clock ScreenPosition { 15  15 }
Clock AlignBottom { TRUE }
Clock TextHeight { 10 }
Clock FontColour { gray20 }
Clock FontStyle { ITALIC }
Clock DateFormat { 'yyyy-MMM-dd HH:mm:ss.SSS' }

# *** OverlayText ***

Title Description { 'Title for the simulation model' }
Title ScreenPosition { 15  15 }
Title Format { 'Fill Order Example - with NextEntity and SelectionCondition' }
Title TextHeight { 18 }
Title FontColour { 150  23  46 }
Title FontStyle { BOLD }

# *** Text ***

Text1 Position { -10.0  1.8  0.0  m }
Text1 Alignment { -0.5  0.0  0.0 }
Text1 Format { 'Stock Generation' }

Text2 Position { -10.0  -3.2  0.0  m }
Text2 Alignment { -0.5  0.0  0.0 }
Text2 Format { 'Order Generation' }

Text3 Position { 1.0  0.0  0.0  m }
Text3 Alignment { -0.5  0.0  0.0 }
Text3 Size { 3.5  0.4  1.0  m }
Text3 RelativeEntity { ExpressionEntity1 }
Text3 Format { 'Inventory, Type A = %.0f' }
Text3 DataSource { [ExpressionEntity1].Value }

Text4 Position { 0.0  -7.2  0.0  m }
Text4 Alignment { -0.5  0.0  0.0 }
Text4 Size { 3.5  0.4  1.0  m }
Text4 Format { 'Required = %.0f' }
Text4 DataSource { 'ent = [ResourceUnit1].Assignment; 
ent == null ? 0 : ent.remaining' }

Text5 Position { 0.0  -6.7  0.0  m }
Text5 Alignment { -0.5  0.0  0.0 }
Text5 Size { 3.5  0.4  1.0  m }
Text5 Format { 'Type = %s' }
Text5 DataSource { 'ent = [ResourceUnit1].Assignment;  ent == null ? "" : ent.type' }

Text6 Position { 0.0  -6.2  0.0  m }
Text6 Alignment { -0.5  0.0  0.0 }
Text6 Size { 3.5  0.4  1.0  m }
Text6 Format { 'Order = %s' }
Text6 DataSource { 'ent = [ResourceUnit1].Assignment;
ent == null ? "" : ent.Name' }

Text7 Position { 1.0  0.0  0.0  m }
Text7 Alignment { -0.5  0.0  0.0 }
Text7 Size { 3.5  0.4  1.0  m }
Text7 RelativeEntity { ExpressionEntity2 }
Text7 Format { 'Inventory, Type B = %.0f' }
Text7 DataSource { [ExpressionEntity2].Value }

Text8 Position { 1.0  0.0  0.0  m }
Text8 Alignment { -0.5  0.0  0.0 }
Text8 RelativeEntity { ExpressionEntity3 }
Text8 Format { 'Orders, Type A = %.0f' }
Text8 DataSource { ExpressionEntity3 }

Text8_Copy1 Position { 1.0  0.0  0.0  m }
Text8_Copy1 Alignment { -0.5  0.0  0.0 }
Text8_Copy1 RelativeEntity { ExpressionEntity4 }
Text8_Copy1 Format { 'Orders, Type B = %.0f' }
Text8_Copy1 DataSource { ExpressionEntity4 }

# *** View ***

View1 Description { 'Default view window' }
View1 ViewCenter { 1.686571  -2.054453  10.548325  m }
View1 ViewPosition { 1.686571  -2.054453  27.868833  m }
View1 ShowWindow { TRUE }
View1 Lock2D { TRUE }
View1 SkyboxImage { <res>/images/sky_map_2048x1024.jpg }
